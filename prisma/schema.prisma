// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Champion {
  id               Int               @id @default(autoincrement())
  name             String            @unique
  biography        String
  releaseDate      DateTime
  abilities        Abilitie[]
  attributes       Attribute?
  inmunities       Inmunity[]
  resistences      Resistence[]
  tags             Tags?
  signatureAbility SignatureAbility?
  specialAttacks   SpecialAttack[]
  synergies        Synergy[]
  sprites          Sprite[]
}

model Sprite {
  id         Int      @id @default(autoincrement())
  source     String
  url        String
  championId Int
  champion   Champion @relation(fields: [championId], references: [id], onDelete: Cascade)
}

model Synergy {
  id         Int               @id @default(autoincrement())
  name       String            @unique
  champions  ChampionSynergy[]
  championId Int
  champion   Champion          @relation(fields: [championId], references: [id], onDelete: Cascade)
  bonuses    SynergyBonus[]
}

model SynergyBonus {
  id          Int     @id @default(autoincrement())
  description String
  synergyId   Int
  synergy     Synergy @relation(fields: [synergyId], references: [id], onDelete: Cascade)
}

model ChampionSynergy {
  id        Int                    @id @default(autoincrement())
  name      String
  bonuses   ChampionSynergyBonus[]
  synergyId Int
  synergies Synergy                @relation(fields: [synergyId], references: [id], onDelete: Cascade)
}

model ChampionSynergyBonus {
  id                Int             @id @default(autoincrement())
  description       String
  championSynergyId Int
  championSynergy   ChampionSynergy @relation(fields: [championSynergyId], references: [id], onDelete: Cascade)
}

model SpecialAttackBonus {
  id              Int           @id @default(autoincrement())
  description     String
  specialAttack   SpecialAttack @relation(fields: [specialAttackId], references: [id], onDelete: Cascade)
  specialAttackId Int
}

model SpecialAttack {
  id          Int                  @id @default(autoincrement())
  name        String               @unique
  description String
  bonuses     SpecialAttackBonus[]
  championId  Int
  champion    Champion             @relation(fields: [championId], references: [id], onDelete: Cascade)
}

model User {
  id        Int     @id @default(autoincrement())
  email     String
  password  String
  validated Boolean @default(false)
  role      String
}

model SignatureBonus {
  id                 Int              @id @default(autoincrement())
  description        String
  signatureAbilityId Int
  signatureAbility   SignatureAbility @relation(fields: [signatureAbilityId], references: [id], onDelete: Cascade)
}

model SignatureAbility {
  id         Int              @id @default(autoincrement())
  name       String
  type       String
  bonuses    SignatureBonus[]
  championId Int              @unique
  champion   Champion         @relation(fields: [championId], references: [id], onDelete: Cascade)
}

model Tags {
  id                Int                    @id @default(autoincrement())
  championId        Int                    @unique
  combatStyle       CombatStyleTag[]
  attributes        AttributeTag[]
  organization      OrganizationTag[]
  allianceWars      AllianceWarsTag[]
  carinasChallenges CarinasChallengesTag[]
  allianceQuest     AllianceQuestTag[]
  releaseDate       String
  saga              String
  champion          Champion               @relation(fields: [championId], references: [id], onDelete: Cascade)
}

model CombatStyleTag {
  id          Int    @id @default(autoincrement())
  description String
  tagId       Int
  tags        Tags   @relation(fields: [tagId], references: [id], onDelete: Cascade)
}

model AttributeTag {
  id          Int    @id @default(autoincrement())
  description String
  tagId       Int
  tags        Tags   @relation(fields: [tagId], references: [id], onDelete: Cascade)
}

model OrganizationTag {
  id          Int    @id @default(autoincrement())
  description String
  tagId       Int
  tags        Tags   @relation(fields: [tagId], references: [id], onDelete: Cascade)
}

model AllianceWarsTag {
  id          Int    @id @default(autoincrement())
  description String
  tagId       Int
  tags        Tags   @relation(fields: [tagId], references: [id], onDelete: Cascade)
}

model CarinasChallengesTag {
  id          Int    @id @default(autoincrement())
  description String
  tagId       Int
  tags        Tags   @relation(fields: [tagId], references: [id], onDelete: Cascade)
}

model AllianceQuestTag {
  id          Int    @id @default(autoincrement())
  description String
  tagId       Int
  tags        Tags   @relation(fields: [tagId], references: [id], onDelete: Cascade)
}

model Resistence {
  id                 Int      @id @default(autoincrement())
  inmunity_asociated String
  ratio              Float
  championId         Int
  champion           Champion @relation(fields: [championId], references: [id], onDelete: Cascade)
}

model Inmunity {
  id         Int      @id @default(autoincrement())
  name       String
  championId Int
  champion   Champion @relation(fields: [championId], references: [id], onDelete: Cascade)
}

model Abilitie {
  id              Int              @id @default(autoincrement())
  title           String
  characteristics Characteristic[]
  championId      Int
  champion        Champion         @relation(fields: [championId], references: [id], onDelete: Cascade)
}

model Characteristic {
  id          Int      @id @default(autoincrement())
  description String
  abilitieId  Int
  abilitie    Abilitie @relation(fields: [abilitieId], references: [id], onDelete: Cascade)
}

model DetailsAttribute {
  id          Int       @id @default(autoincrement())
  hp          Int
  potency     Int
  force       Int
  adrenaline  Float
  attributeId Int       @unique
  attribute   Attribute @relation(fields: [attributeId], references: [id], onDelete: Cascade)
}

model Attribute {
  id                      Int               @id @default(autoincrement())
  details                 DetailsAttribute?
  critical_raiting        Float
  critical_damage_raiting Float
  armor_penetration       Float
  block_penetration       Float
  critical_resistence     Float
  armor_raiting           Float
  block_proficiency       Float
  energy_resistence       Float
  championId              Int               @unique
  champion                Champion          @relation(fields: [championId], references: [id], onDelete: Cascade)
}
